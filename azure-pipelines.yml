# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - master

variables:
  tag: '$(Build.BuildId)'

pool:
  vmImage: ubuntu-latest

steps:
  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'clean install'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      mavenVersionOption: 'Default'
      mavenAuthenticateFeed: false
      effectivePomSkip: false
      sonarQubeRunAnalysis: false
  - task: Docker@2
    displayName: build and Push image
    inputs:
      containerRegistry: 'khuramshah89 docker hub'
      repository: 'khuramshah/book-tracker'
      command: 'buildAndPush'
      Dockerfile: '**/Dockerfile'
      tags: |
        $(tag)
        latest
  - task: CopyFiles@2
    inputs:
      Contents: '*.yaml'
      TargetFolder: $(build.artifactstagingdirectory)
  - task: CopyFiles@2
    inputs:
      Contents: '*.jmx'
      TargetFolder: $(build.artifactstagingdirectory)
  - task: CopyFiles@2
    inputs:
      Contents: '*.csv'
      TargetFolder: '$(build.artifactstagingdirectory)'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop-build'
      publishLocation: 'Container'
  # - task: Docker@2
  #   displayName: login docker
  #   inputs:
  #     containerRegistry: 'my docker hub'
  #     command: 'login'
  - task: DownloadBuildArtifacts@1
    inputs:
      buildType: 'specific'
      project: '44d207d5-7d79-4b2c-badc-a4913b3a88b2'
      pipeline: '1'
      specificBuildWithTriggering: true
      buildVersionToDownload: 'latest'
      downloadType: 'specific'
      downloadPath: '$(System.ArtifactsDirectory)'
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        # Write your commands here
        
        echo '$(System.ArtifactsDirectory)'
  - task: Kubernetes@1
    inputs:
      connectionType: 'Azure Resource Manager'
      azureSubscriptionEndpoint: 'Azure service connection poc'
      azureResourceGroup: 'poc'
      kubernetesCluster: 'pocAKSCluster'
      useClusterAdmin: true
      namespace: 'default'
      command: 'apply'
      useConfigurationFile: true
      configuration: '$(System.ArtifactsDirectory)/drop-build/aks-deploy-docker-hub.yaml'
      secretType: 'dockerRegistry'
      containerRegistryType: 'Azure Container Registry'
  - task: JMeterInstaller@0
    inputs:
      jmeterVersion: '5.2.1'
  - task: CmdLine@2
    inputs:
     script: 'jmeter -n -t BookServiceTest.jmx -l resultes01.jtl -e -o resultReport'
  - task: CmdLine@2
    inputs:
      script: |
        echo Write your commands here
        
        echo ' $(Build.SourcesDirectory)'
        ls  $(Build.SourcesDirectory)
        echo 'System.ArtifactsDirectory'
        ls $(System.ArtifactsDirectory)
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)/resultReport'
      ArtifactName: 'load-test'
      publishLocation: 'Container'
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)/resultes01.jtl'
      ArtifactName: 'load-test'
      publishLocation: 'Container'